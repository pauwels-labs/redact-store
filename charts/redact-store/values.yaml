# values we use from the `jx-requirements.yml` file if we are using helmfile and helm 3
jxRequirements:
  ingress:
    domain: svc.cluster.local
    externalDNS: false
    namespaceSubDomain: .local.
    serviceType: ""
    tls:
      email: ""
      enabled: false
      production: false
      secretName: ""
    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'
    apiVersion: "extensions/v1beta1"
    # shared ingress annotations on all services
    annotations:
    #  kubernetes.io/ingress.class: nginx
# Default helm values
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: 274295908850.dkr.ecr.eu-west-1.amazonaws.com/pauwels-labs/redact-store
  tag: 1.2.10
  pullPolicy: IfNotPresent
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podSecurityContext:
  fsGroup: 2000
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
service:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  type: ClusterIP
env: {}
deployment: {}
# labels: {}
# annotations: {}

ingress:
  enabled: true
  annotations:
    global:
      kubernetes.io/ingress.class: 'nginx'
    ratelimited:
      kubernetes.io/ingress.class: 'nginx'
      nginx.ingress.kubernetes.io/limit-rpm: '2'
      nginx.ingress.kubernetes.io/limit-rps: '5'
      nginx.ingress.kubernetes.io/proxy-buffering: 'on'
      nginx.ingress.kubernetes.io/limit-rate-after: '100'
      nginx.ingress.kubernetes.io/limit-rate: '50'
  hosts:
    # The subdomain/domain parameters in the following configuration are special as they allow
    # for customization per-environment. This means you can have the deployments automatically
    # configured to use a URL that looks like some-prefix.<environment-name>.some-suffix. Examples:
    # - host: subdomain.domain.com -> In this case, since this is using the static 'host' parameter,
    #                                 the URL used would be 'subdomain.domain.com'
    # - hostPrefix: subdomain.
    #   hostSuffix: .domain.com    -> In this case, since this is using the dynamic 'hostPrefix' and
    #                                 'hostSuffix' parameters, the URL used would be
    #                                 'subdomain.<environment-name>.domain.com'
    #
    # The <environment-name> variable is defined inside of templates/_helpers.tpl, and is currently
    # defined as the deployed namespace name with any 'jx-' prefix trimmed.
    global:
      - servicePort: http
        paths: []
    ratelimited: []
  tls: true
  cert:
    create: false
    kind: ClusterIssuer
    issuer: letsencrypt-prod
  additionalTLS: []
  # - secretName: tls-secrets
  #   hosts:
  #   - pauwelslabs.com
  #   - www.pauwelslabs.com
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
extraVolumeMounts:
  default:
    - name: config
      mountPath: /usr/local/bin/config
    - name: tls
      mountPath: /usr/local/bin/config/tls/server
extraVolumes:
  - name: tls
    secret:
      secretName: tls-pauwelslabs-com-p
