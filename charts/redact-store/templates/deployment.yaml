apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
    {{- if hasKey .Values.deployment "labels" }}
    {{ toYaml .Values.deployment.labels | trim | indent 4 }}
    {{- end }}
  {{- if hasKey .Values.deployment "annotations" }}
  annotations:
    {{ toYaml .Values.deployment.annotations | trim | indent 4 }}
  {{- end }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ default 1 .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if hasKey .Values.deployment "annotations" }}
      annotations:
        {{ toYaml .Values.deployment.annotations | trim | indent 8 }}
      {{- end }}
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
        {{- if hasKey .Values.deployment "labels" }}
        {{ toYaml .Values.deployment.labels | trim | indent 4 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ include "fullname" . }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy -}}
        {{ (include "resources" (dict "Values" .Values "ContainerName" (include "name" .))) | indent 8 }}
        envFrom:
        - secretRef:
            name: {{ include "fullname" . }}-env
        {{- (include "envVars" (dict "Release" .Release "Values" .Values "ContainerName" (include "name" .))) | indent 8 -}}
        {{- if hasKey .Values.service "ports" -}}
        {{- $ports := .Values.service.ports -}}
        {{- $lenPorts := len $ports -}}
        {{ if gt $lenPorts 0 }}
        ports:
        {{- range $key, $port := $ports }}
        - containerPort: {{ $port.targetPort }}
        {{- if hasKey $port "name" }}
          name: {{ $port.name }}
        {{- end -}}
        {{- end -}}
        {{- end -}}
        {{- end -}}
        {{- if hasKey .Values "livenessProbe" -}}
        livenessProbe:
        {{ toYaml .Values.livenessProbe | trim | indent 10 -}}
        {{- end -}}
        {{- if hasKey .Values "readinessProbe" -}}
        readinessProbe:
        {{ toYaml .Values.readinessProbe | trim | indent 10 -}}
        {{- end -}}
        {{- (include "volumeMounts" (dict "Values" .Values "ContainerName" (include "name" .))) | indent 8 -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config
        secret:
          secretName: {{ include "fullname" . }}-config
{{ (include "volumes" (dict "Values" .Values "ContainerName" (include "name" .))) | trim | indent 6 }}
