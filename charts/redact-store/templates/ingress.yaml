{{- if and .Values.ingress.enabled (gt (len .Values.ingress.hosts.global) 0) -}}
{{- $fullName := include "fullname" . -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations.global }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.tls }}
  tls:
  - secretName: {{ include "tlsSecretName" . }}
    hosts:
    {{- range .Values.ingress.hosts.global }}
    - {{ (include "parameterizedHost" (dict "Rule" . "Global" $)) | quote }}
    {{- end }}
  {{- range .Values.ingress.additionalTLS }}
  - hosts:
    {{- range .hosts }}
    - {{ . | quote }}
    {{- end }}
    secretName: {{ .secretName }}
  {{- end }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hosts.global }}
  - host: {{ (include "parameterizedHost" (dict "Rule" . "Global" $)) | quote }}
    http:
      paths:
      {{ $svcPort := .servicePort }}
      {{- if gt (len .paths) 0 }}
      {{- range .paths -}}
      - path: {{ . }}
        backend:
          service:
            name: {{ $fullName }}
            port:
              name: {{ $svcPort }}
      {{- end }}
      {{- else -}}
      - backend:
          service:
            name: {{ $fullName }}
            port:
              name: {{ $svcPort }}
      {{- end -}}
  {{- end }}
{{- end }}
